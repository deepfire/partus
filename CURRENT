1. EVAL-FOR-EMACS-ARG-COUNT
In thread 'worker': condition of type <class 'Exception'>: eval_for_emacs() takes exactly 3 arguments (1 given)
 0: cl.py:1791: _report_condition(cond, stream, backtrace)
 1: swank_backend.py:494: <lambda>(cond, hook)
 2: cl.py:1829: __cl_condition_handler__(condspec, frame)
 3: cl.py:1712: _pytracer(frame, event, arg)
 4: swank.py:890: <lambda>()
 5: swank.py:706: restart_case_body()
 6: cl.py:1950: _restart_bind(body, restarts_args)
 7: cl.py:1965: <lambda>()
 8: cl.py:834: catch(ball, body)
 9: cl.py:1965: _restart_case(body)
10: cl.py:1968: restart_case(body)
11: swank.py:712: <lambda>()
12: swank_backend.py:496: call_with_debugger_hook(function, body)
13: swank.py:467: <lambda>()
14: swank.py:106: call_with_bindings(alist, fun)
15: swank.py:451: with_io_redirection(conn, body)
16: swank.py:465: <lambda>()
17: cl.py:1853: handler_bind(fn, no_error)
18: swank.py:293: handler_case_body()
19: cl.py:1853: handler_bind(fn, no_error)
20: cl.py:1875: <lambda>()
21: cl.py:834: catch(ball, body)
22: cl.py:1875: handler_case(body, no_error)
23: swank.py:297: with_swank_error_handler(conn, body)
24: swank.py:463: <lambda>()
25: swank.py:446: without_slime_interrupts(body)
26: swank.py:461: with_connection(conn, body)
27: swank.py:709: with_top_level_restart(conn, restart_fn, body)
28: swank.py:887: <lambda>()
29: swank.py:106: call_with_bindings(alist, fun)
30: swank.py:884: <lambda>()
31: swank_python.py:622: <lambda>()
32: /usr/lib/python3.2/threading.py:740: _bootstrap_inner(self)

2. BACKTRACE-COMPUTATION-HANGS

<== [:DEBUG-ACTIVATE, 1, 1, None]
<-- 000019, '(:debug-activate 1 1 nil)'
    (CONTROL-THREAD)  RECEIVE_IF..<LAMBDA>..CATCH..<LAMBDA>.._RECEIVE_IF:
       - checking for events on <QUEUE 2fe2b48>..
--> 00003c, '(:emacs-rex (swank:backtrace 19 59) "COMMON-LISP-USER" 1 2)
'
==> [:EMACS-REX, [SWANK::BACKTRACE, 19, 59], 'COMMON-LISP-USER', 1, 2]
    (CONTROL-THREAD)  HANDLER_BIND..<LAMBDA>..LOOP..<LAMBDA>..DISPATCH_EVENT:
       - [:EMACS-REX, [SWANK::BACKTRACE, 19, 59], 'COMMON-LISP-USER', 1, 2]
    (CONTROL-THREAD)  RECEIVE_IF..<LAMBDA>..CATCH..<LAMBDA>.._RECEIVE_IF:
       - checking for events on <QUEUE 2a10b90>..
    (WORKER)  CALL_WITH_LOCK_HELD..LOCKBODY..MEMBER_IF..<LAMBDA>..EVENT_MATCH_P:
       - hit LIST: [CL:OR, [:EMACS-REX], [:SLDB-RETURN]] vs. :EMACS-REX of type <class 'cl.symbol'>
    (WORKER)  CALL_WITH_LOCK_HELD..LOCKBODY..MEMBER_IF..<LAMBDA>..EVENT_MATCH_P:
       - hit OR
    (WORKER)  <LAMBDA>..EVENT_MATCH_P..SOME..<LAMBDA>..EVENT_MATCH_P:
       - hit LIST: [:EMACS-REX] vs. :EMACS-REX of type <class 'cl.symbol'>
    (WORKER)  RECEIVE_IF..<LAMBDA>..CATCH..<LAMBDA>.._RECEIVE_IF:
       - checking for events on <QUEUE 2fe2170>..
