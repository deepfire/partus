==> [:EMACS-REX, [SWANK::CONNECTION-INFO], 'COMMON-LISP-USER', CL:T, 1]
...<silence>
...because use_threads_p() is misled by symbol_value("_emacs_connection_").communication_style
   not being keyword("spawn"), which somehow does not propagate:

;; Swank started at port: 4005.
<LAMBDA>..SERVE..ACCEPT_CONNECTIONS..MAKE_CONNECTION: '<unnamed-thread>' - style: :SPAWN
SERVE..ACCEPT_CONNECTIONS..MAKE_CONNECTION..__INIT__: '<unnamed-thread>' - style: :SPAWN
LOOP..<LAMBDA>..DECODE_MESSAGE..WITHOUT_SLIME_INTERRUPTS: 'reader-thread' - HEAR!!!
LOOP..<LAMBDA>..RECEIVE..RECEIVE_IF: 'control-thread' - entry
LOOP..BODY..CALL_WITH_LOCK_HELD..LOCKBODY: 'control-thread' - got lock
--> 00003c, '(:emacs-rex (swank:connection-info) "COMMON-LISP-USER" t 1)
'
LOOP..BODY..CALL_WITH_LOCK_HELD..LOCKBODY: 'control-thread' - sleeping
==> [:EMACS-REX, [SWANK::CONNECTION-INFO], 'COMMON-LISP-USER', CL:T, 1]
SEND -> <Thread(control-thread, started 46968958433024)>: [:EMACS-REX, [SWANK::CONNECTION-INFO], 'COMMON-LISP-USER', CL:T, 1], waking bustahdz!
LOOP..<LAMBDA>..DECODE_MESSAGE..WITHOUT_SLIME_INTERRUPTS: 'reader-thread' - HEAR!!!
LOOP..BODY..CALL_WITH_LOCK_HELD..LOCKBODY: 'control-thread' - got lock
LOOP..<LAMBDA>..RECEIVE..RECEIVE_IF: 'control-thread' - returning ([:EMACS-REX, [SWANK::CONNECTION-INFO], 'COMMON-LISP-USER', CL:T, 1], None)
 0: swank_python.py:430: receive_if(test, timeout)
 1: swank_python.py:401: receive(timeout)
 2: swank.py:481: <lambda>()
 3: cl.py:352: loop(body)
 4: swank.py:481: <lambda>()
 5: cl.py:1710: handler_bind(fn, no_error)
 6: swank.py:226: with_panic_handler(conn, body)
 7: swank.py:480: dispatch_loop(conn)
 8: swank.py:722: control_thread(conn)
 9: swank.py:714: <lambda>()
10: swank_python.py:222: <lambda>()
11: /usr/lib/python3.2/threading.py:740: _bootstrap_inner(self)
<LAMBDA>..WITH_TOP_LEVEL_RESTART..WITH_CONNECTION..WITHOUT_SLIME_INTERRUPTS: 'worker' - HEAR!!!
SEND -> <Thread(worker, started 46968956331776)>: [:EMACS-REX, [SWANK::CONNECTION-INFO], 'COMMON-LISP-USER', 1], waking bustahdz!
LOOP..<LAMBDA>..RECEIVE..RECEIVE_IF: 'control-thread' - entry
Object '<swank.connection object at 0x2e140d0>' of type <class 'swank.connection'>:
LOOP..BODY..CALL_WITH_LOCK_HELD..LOCKBODY: 'control-thread' - got lock
               user_input: CL:NIL
LOOP..BODY..CALL_WITH_LOCK_HELD..LOCKBODY: 'control-thread' - sleeping
            coding_system: None
indentation_cache_packages: []
                   socket: <_io.TextIOWrapper name=3 mode='r' encoding='UTF-8'>
                socket_io: <_io.TextIOWrapper mode='rw' encoding='utf-8'>
           serve_requests: <function spawn_threads_for_connection at 0x2dee0d8>
            reader_thread: <Thread(reader-thread, started 46968960534272)>
        indentation_cache: {}
         autoflush_thread: None
                  user_io: CL:NIL
           control_thread: <Thread(control-thread, started 46968958433024)>
             repl_results: CL:NIL
                  cleanup: CL:NIL
             trace_output: CL:NIL
                      env: None
              user_output: CL:NIL
         dedicated_output: CL:NIL
     saved_sigint_handler: None
      communication_style: None
              repl_thread: None
